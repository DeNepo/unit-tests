// js_beautify, compressed with jsCompress
(function () { var e = function (e) { function t(n) { if (_[n]) return _[n].exports; var a = _[n] = { i: n, l: !1, exports: {} }; return e[n].call(a.exports, a, a.exports, t), a.l = !0, a.exports } var _ = {}; return t.m = e, t.c = _, t.d = function (e, _, n) { t.o(e, _) || Object.defineProperty(e, _, { enumerable: !0, get: n }) }, t.r = function (e) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, t.t = function (e, _) { if (1 & _ && (e = t(e)), 8 & _) return e; if (4 & _ && "object" == typeof e && e && e.__esModule) return e; var n = Object.create(null); if (t.r(n), Object.defineProperty(n, "default", { enumerable: !0, value: e }), 2 & _ && "string" != typeof e) for (var a in e) t.d(n, a, function (t) { return e[t] }.bind(null, a)); return n }, t.n = function (e) { var _ = e && e.__esModule ? function () { return e["default"] } : function () { return e }; return t.d(_, "a", _), _ }, t.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, t.p = "", t(t.s = 0) }([function (e, t, _) { "use strict"; var n = _(1).Beautifier, a = _(5).Options; e.exports = function (e, t) { var _ = new n(e, t); return _.beautify() }, e.exports.defaultOptions = function () { return new a } }, function (e, t, _) { "use strict"; function n(e, t) { return -1 !== t.indexOf(e) } function a(e) { return e.replace(/^\s+/g, "") } function o(e, t) { return e && e.type === x.RESERVED && e.text === t } function u(e, t) { return e && e.type === x.RESERVED && n(e.text, t) } function i(e, t) { t.multiline_frame || t.mode === R.ForInitializer || t.mode === R.Conditional || e.remove_indent(t.start_line_index) } function p(e) { e = e.replace(b.allLineBreaks, "\n"); for (var t = [], _ = e.indexOf("\n"); -1 !== _;)t.push(e.substring(0, _)), e = e.substring(_ + 1), _ = e.indexOf("\n"); return e.length && t.push(e), t } function s(e) { return e === R.ArrayLiteral } function r(e) { return n(e, [R.Expression, R.ForInitializer, R.Conditional]) } function l(e, t) { for (var _, n = 0; n < e.length; n++)if (_ = e[n].trim(), _.charAt(0) !== t) return !1; return !0 } function d(e, t) { for (var _, n = 0, a = e.length; n < a; n++)if (_ = e[n], _ && 0 !== _.indexOf(t)) return !1; return !0 } function c(e, t) { t = t || {}, this._source_text = e || "", this._output = null, this._tokens = null, this._last_last_text = null, this._flags = null, this._previous_flags = null, this._flag_store = null, this._options = new m(t) } var f = _(2).Output, g = _(3).Token, b = _(4), m = _(5).Options, k = _(7).Tokenizer, h = _(7).line_starters, y = _(7).positionable_operators, x = _(7).TOKEN, w = ["case", "return", "do", "if", "throw", "else", "await", "break", "continue", "async"], E = function (e) { for (var t = {}, _ = 0; _ < e.length; _++)t[e[_].replace(/-/g, "_")] = e[_]; return t }(["before-newline", "after-newline", "preserve-newline"]), O = [E.before_newline, E.preserve_newline], R = { BlockStatement: "BlockStatement", Statement: "Statement", ObjectLiteral: "ObjectLiteral", ArrayLiteral: "ArrayLiteral", ForInitializer: "ForInitializer", Conditional: "Conditional", Expression: "Expression" }; c.prototype.create_flags = function (e, t) { var _ = 0; e && (_ = e.indentation_level, !this._output.just_added_newline() && e.line_indent_level > _ && (_ = e.line_indent_level)); var n = { mode: t, parent: e, last_token: e ? e.last_token : new g(x.START_BLOCK, ""), last_word: e ? e.last_word : "", declaration_statement: !1, declaration_assignment: !1, multiline_frame: !1, inline_frame: !1, if_block: !1, else_block: !1, do_block: !1, do_while: !1, import_block: !1, in_case_statement: !1, in_case: !1, case_body: !1, indentation_level: _, alignment: 0, line_indent_level: e ? e.line_indent_level : _, start_line_index: this._output.get_line_number(), ternary_depth: 0 }; return n }, c.prototype._reset = function (e) { var t = e.match(/^[\t ]*/)[0]; this._last_last_text = "", this._output = new f(this._options, t), this._output.raw = this._options.test_output_raw, this._flag_store = [], this.set_mode(R.BlockStatement); var _ = new k(e, this._options); return this._tokens = _.tokenize(), e }, c.prototype.beautify = function () { if (this._options.disabled) return this._source_text; var e, t = this._reset(this._source_text), _ = this._options.eol; "auto" === this._options.eol && (_ = "\n", t && b.lineBreak.test(t || "") && (_ = t.match(b.lineBreak)[0])); for (var n = this._tokens.next(); n;)this.handle_token(n), this._last_last_text = this._flags.last_token.text, this._flags.last_token = n, n = this._tokens.next(); return e = this._output.get_code(_), e }, c.prototype.handle_token = function (e, t) { e.type === x.START_EXPR ? this.handle_start_expr(e) : e.type === x.END_EXPR ? this.handle_end_expr(e) : e.type === x.START_BLOCK ? this.handle_start_block(e) : e.type === x.END_BLOCK ? this.handle_end_block(e) : e.type === x.WORD ? this.handle_word(e) : e.type === x.RESERVED ? this.handle_word(e) : e.type === x.SEMICOLON ? this.handle_semicolon(e) : e.type === x.STRING ? this.handle_string(e) : e.type === x.EQUALS ? this.handle_equals(e) : e.type === x.OPERATOR ? this.handle_operator(e) : e.type === x.COMMA ? this.handle_comma(e) : e.type === x.BLOCK_COMMENT ? this.handle_block_comment(e, t) : e.type === x.COMMENT ? this.handle_comment(e, t) : e.type === x.DOT ? this.handle_dot(e) : e.type === x.EOF ? this.handle_eof(e) : e.type === x.UNKNOWN ? this.handle_unknown(e, t) : this.handle_unknown(e, t) }, c.prototype.handle_whitespace_and_comments = function (e, t) { var _ = e.newlines, n = this._options.keep_array_indentation && s(this._flags.mode); if (e.comments_before) for (var a = e.comments_before.next(); a;)this.handle_whitespace_and_comments(a, t), this.handle_token(a, t), a = e.comments_before.next(); if (n) for (var o = 0; o < _; o += 1)this.print_newline(0 < o, t); else if (this._options.max_preserve_newlines && _ > this._options.max_preserve_newlines && (_ = this._options.max_preserve_newlines), this._options.preserve_newlines && 1 < _) { this.print_newline(!1, t); for (var u = 1; u < _; u += 1)this.print_newline(!0, t) } }; var T = ["async", "break", "continue", "return", "throw", "yield"]; c.prototype.allow_wrap_or_preserved_newline = function (e, t) { if (t = void 0 !== t && t, !this._output.just_added_newline()) { var _ = this._options.preserve_newlines && e.newlines || t, a = n(this._flags.last_token.text, y) || n(e.text, y); if (a) { var o = n(this._flags.last_token.text, y) && n(this._options.operator_position, O) || n(e.text, y); _ = _ && o } if (_) this.print_newline(!1, !0); else if (this._options.wrap_line_length) { if (u(this._flags.last_token, T)) return; this._output.set_wrap_point() } } }, c.prototype.print_newline = function (e, t) { if (!t && ";" !== this._flags.last_token.text && "," !== this._flags.last_token.text && "=" !== this._flags.last_token.text && (this._flags.last_token.type !== x.OPERATOR || "--" === this._flags.last_token.text || "++" === this._flags.last_token.text)) for (var _ = this._tokens.peek(); this._flags.mode === R.Statement && !(this._flags.if_block && o(_, "else")) && !this._flags.do_block;)this.restore_mode(); this._output.add_new_line(e) && (this._flags.multiline_frame = !0) }, c.prototype.print_token_line_indentation = function (e) { this._output.just_added_newline() && (this._options.keep_array_indentation && e.newlines && ("[" === e.text || s(this._flags.mode)) ? (this._output.current_line.set_indent(-1), this._output.current_line.push(e.whitespace_before), this._output.space_before_token = !1) : this._output.set_indent(this._flags.indentation_level, this._flags.alignment) && (this._flags.line_indent_level = this._flags.indentation_level)) }, c.prototype.print_token = function (e) { if (this._output.raw) return void this._output.add_raw_token(e); if (this._options.comma_first && e.previous && e.previous.type === x.COMMA && this._output.just_added_newline() && "," === this._output.previous_line.last()) { var t = this._output.previous_line.pop(); this._output.previous_line.is_empty() && (this._output.previous_line.push(t), this._output.trim(!0), this._output.current_line.pop(), this._output.trim()), this.print_token_line_indentation(e), this._output.add_token(","), this._output.space_before_token = !0 } this.print_token_line_indentation(e), this._output.non_breaking_space = !0, this._output.add_token(e.text), this._output.previous_token_wrapped && (this._flags.multiline_frame = !0) }, c.prototype.indent = function () { this._flags.indentation_level += 1, this._output.set_indent(this._flags.indentation_level, this._flags.alignment) }, c.prototype.deindent = function () { 0 < this._flags.indentation_level && (!this._flags.parent || this._flags.indentation_level > this._flags.parent.indentation_level) && (this._flags.indentation_level -= 1, this._output.set_indent(this._flags.indentation_level, this._flags.alignment)) }, c.prototype.set_mode = function (e) { this._flags ? (this._flag_store.push(this._flags), this._previous_flags = this._flags) : this._previous_flags = this.create_flags(null, e), this._flags = this.create_flags(this._previous_flags, e), this._output.set_indent(this._flags.indentation_level, this._flags.alignment) }, c.prototype.restore_mode = function () { 0 < this._flag_store.length && (this._previous_flags = this._flags, this._flags = this._flag_store.pop(), this._previous_flags.mode === R.Statement && i(this._output, this._previous_flags), this._output.set_indent(this._flags.indentation_level, this._flags.alignment)) }, c.prototype.start_of_object_property = function () { return this._flags.parent.mode === R.ObjectLiteral && this._flags.mode === R.Statement && (":" === this._flags.last_token.text && 0 === this._flags.ternary_depth || u(this._flags.last_token, ["get", "set"])) }, c.prototype.start_of_statement = function (e) { var t = !1; return t = t || u(this._flags.last_token, ["var", "let", "const"]) && e.type === x.WORD, t = t || o(this._flags.last_token, "do"), t = t || (this._flags.parent.mode !== R.ObjectLiteral || this._flags.mode !== R.Statement) && u(this._flags.last_token, T) && !e.newlines, t = t || o(this._flags.last_token, "else") && (!o(e, "if") || e.comments_before), t = t || this._flags.last_token.type === x.END_EXPR && (this._previous_flags.mode === R.ForInitializer || this._previous_flags.mode === R.Conditional), t = t || this._flags.last_token.type === x.WORD && this._flags.mode === R.BlockStatement && !this._flags.in_case && "--" !== e.text && "++" !== e.text && "function" !== this._last_last_text && e.type !== x.WORD && e.type !== x.RESERVED, t = t || this._flags.mode === R.ObjectLiteral && (":" === this._flags.last_token.text && 0 === this._flags.ternary_depth || u(this._flags.last_token, ["get", "set"])), !!t && (this.set_mode(R.Statement), this.indent(), this.handle_whitespace_and_comments(e, !0), this.start_of_object_property() || this.allow_wrap_or_preserved_newline(e, u(e, ["do", "for", "if", "while"])), !0) }, c.prototype.handle_start_expr = function (e) { this.start_of_statement(e) || this.handle_whitespace_and_comments(e); var t = R.Expression; if ("[" === e.text) { if (this._flags.last_token.type === x.WORD || ")" === this._flags.last_token.text) return u(this._flags.last_token, h) && (this._output.space_before_token = !0), this.print_token(e), this.set_mode(t), this.indent(), void (this._options.space_in_paren && (this._output.space_before_token = !0)); t = R.ArrayLiteral, s(this._flags.mode) && ("[" === this._flags.last_token.text || "," === this._flags.last_token.text && ("]" === this._last_last_text || "}" === this._last_last_text)) && !this._options.keep_array_indentation && this.print_newline(), n(this._flags.last_token.type, [x.START_EXPR, x.END_EXPR, x.WORD, x.OPERATOR]) || (this._output.space_before_token = !0) } else { if (this._flags.last_token.type === x.RESERVED) "for" === this._flags.last_token.text ? (this._output.space_before_token = this._options.space_before_conditional, t = R.ForInitializer) : n(this._flags.last_token.text, ["if", "while"]) ? (this._output.space_before_token = this._options.space_before_conditional, t = R.Conditional) : n(this._flags.last_word, ["await", "async"]) ? this._output.space_before_token = !0 : "import" === this._flags.last_token.text && "" === e.whitespace_before ? this._output.space_before_token = !1 : (n(this._flags.last_token.text, h) || "catch" === this._flags.last_token.text) && (this._output.space_before_token = !0); else if (this._flags.last_token.type === x.EQUALS || this._flags.last_token.type === x.OPERATOR) this.start_of_object_property() || this.allow_wrap_or_preserved_newline(e); else if (this._flags.last_token.type === x.WORD) { this._output.space_before_token = !1; var _ = this._tokens.peek(-3); if (this._options.space_after_named_function && _) { var a = this._tokens.peek(-4); u(_, ["async", "function"]) || "*" === _.text && u(a, ["async", "function"]) ? this._output.space_before_token = !0 : this._flags.mode === R.ObjectLiteral && ("{" === _.text || "," === _.text || "*" === _.text && ("{" === a.text || "," === a.text)) && (this._output.space_before_token = !0) } } else this.allow_wrap_or_preserved_newline(e); (this._flags.last_token.type === x.RESERVED && ("function" === this._flags.last_word || "typeof" === this._flags.last_word) || "*" === this._flags.last_token.text && (n(this._last_last_text, ["function", "yield"]) || this._flags.mode === R.ObjectLiteral && n(this._last_last_text, ["{", ","]))) && (this._output.space_before_token = this._options.space_after_anon_function) } ";" === this._flags.last_token.text || this._flags.last_token.type === x.START_BLOCK ? this.print_newline() : (this._flags.last_token.type === x.END_EXPR || this._flags.last_token.type === x.START_EXPR || this._flags.last_token.type === x.END_BLOCK || "." === this._flags.last_token.text || this._flags.last_token.type === x.COMMA) && this.allow_wrap_or_preserved_newline(e, e.newlines), this.print_token(e), this.set_mode(t), this._options.space_in_paren && (this._output.space_before_token = !0), this.indent() }, c.prototype.handle_end_expr = function (e) { for (; this._flags.mode === R.Statement;)this.restore_mode(); this.handle_whitespace_and_comments(e), this._flags.multiline_frame && this.allow_wrap_or_preserved_newline(e, "]" === e.text && s(this._flags.mode) && !this._options.keep_array_indentation), this._options.space_in_paren && (this._flags.last_token.type !== x.START_EXPR || this._options.space_in_empty_paren ? this._output.space_before_token = !0 : (this._output.trim(), this._output.space_before_token = !1)), this.deindent(), this.print_token(e), this.restore_mode(), i(this._output, this._previous_flags), this._flags.do_while && this._previous_flags.mode === R.Conditional && (this._previous_flags.mode = R.Expression, this._flags.do_block = !1, this._flags.do_while = !1) }, c.prototype.handle_start_block = function (e) { this.handle_whitespace_and_comments(e); var t = this._tokens.peek(), _ = this._tokens.peek(1); "switch" === this._flags.last_word && this._flags.last_token.type === x.END_EXPR ? (this.set_mode(R.BlockStatement), this._flags.in_case_statement = !0) : this._flags.case_body ? this.set_mode(R.BlockStatement) : _ && (n(_.text, [":", ","]) && n(t.type, [x.STRING, x.WORD, x.RESERVED]) || n(t.text, ["get", "set", "..."]) && n(_.type, [x.WORD, x.RESERVED])) ? n(this._last_last_text, ["class", "interface"]) ? this.set_mode(R.BlockStatement) : this.set_mode(R.ObjectLiteral) : this._flags.last_token.type === x.OPERATOR && "=>" === this._flags.last_token.text ? this.set_mode(R.BlockStatement) : n(this._flags.last_token.type, [x.EQUALS, x.START_EXPR, x.COMMA, x.OPERATOR]) || u(this._flags.last_token, ["return", "throw", "import", "default"]) ? this.set_mode(R.ObjectLiteral) : this.set_mode(R.BlockStatement); var a = !t.comments_before && "}" === t.text, o = a && "function" === this._flags.last_word && this._flags.last_token.type === x.END_EXPR; if (this._options.brace_preserve_inline) { var i = 0, p = null; this._flags.inline_frame = !0; do if (i += 1, p = this._tokens.peek(i - 1), p.newlines) { this._flags.inline_frame = !1; break } while (p.type !== x.EOF && (p.type !== x.END_BLOCK || p.opened !== e)) } ("expand" === this._options.brace_style || "none" === this._options.brace_style && e.newlines) && !this._flags.inline_frame ? this._flags.last_token.type !== x.OPERATOR && (o || this._flags.last_token.type === x.EQUALS || u(this._flags.last_token, w) && "else" !== this._flags.last_token.text) ? this._output.space_before_token = !0 : this.print_newline(!1, !0) : (s(this._previous_flags.mode) && (this._flags.last_token.type === x.START_EXPR || this._flags.last_token.type === x.COMMA) && ((this._flags.last_token.type === x.COMMA || this._options.space_in_paren) && (this._output.space_before_token = !0), (this._flags.last_token.type === x.COMMA || this._flags.last_token.type === x.START_EXPR && this._flags.inline_frame) && (this.allow_wrap_or_preserved_newline(e), this._previous_flags.multiline_frame = this._previous_flags.multiline_frame || this._flags.multiline_frame, this._flags.multiline_frame = !1)), this._flags.last_token.type !== x.OPERATOR && this._flags.last_token.type !== x.START_EXPR && (this._flags.last_token.type !== x.START_BLOCK || this._flags.inline_frame ? this._output.space_before_token = !0 : this.print_newline())), this.print_token(e), this.indent(), a || this._options.brace_preserve_inline && this._flags.inline_frame || this.print_newline() }, c.prototype.handle_end_block = function (e) { for (this.handle_whitespace_and_comments(e); this._flags.mode === R.Statement;)this.restore_mode(); var t = this._flags.last_token.type === x.START_BLOCK; this._flags.inline_frame && !t ? this._output.space_before_token = !0 : "expand" === this._options.brace_style ? !t && this.print_newline() : !t && (s(this._flags.mode) && this._options.keep_array_indentation ? (this._options.keep_array_indentation = !1, this.print_newline(), this._options.keep_array_indentation = !0) : this.print_newline()), this.restore_mode(), this.print_token(e) }, c.prototype.handle_word = function (e) { if (e.type === x.RESERVED) if (n(e.text, ["set", "get"]) && this._flags.mode !== R.ObjectLiteral) e.type = x.WORD; else if ("import" === e.text && "(" === this._tokens.peek().text) e.type = x.WORD; else if (n(e.text, ["as", "from"]) && !this._flags.import_block) e.type = x.WORD; else if (this._flags.mode === R.ObjectLiteral) { var t = this._tokens.peek(); ":" === t.text && (e.type = x.WORD) } if (this.start_of_statement(e) ? u(this._flags.last_token, ["var", "let", "const"]) && e.type === x.WORD && (this._flags.declaration_statement = !0) : e.newlines && !r(this._flags.mode) && (this._flags.last_token.type !== x.OPERATOR || "--" === this._flags.last_token.text || "++" === this._flags.last_token.text) && this._flags.last_token.type !== x.EQUALS && (this._options.preserve_newlines || !u(this._flags.last_token, ["var", "let", "const", "set", "get"])) ? (this.handle_whitespace_and_comments(e), this.print_newline()) : this.handle_whitespace_and_comments(e), this._flags.do_block && !this._flags.do_while) { if (o(e, "while")) return this._output.space_before_token = !0, this.print_token(e), this._output.space_before_token = !0, void (this._flags.do_while = !0); this.print_newline(), this._flags.do_block = !1 } if (this._flags.if_block) if (!this._flags.else_block && o(e, "else")) this._flags.else_block = !0; else { for (; this._flags.mode === R.Statement;)this.restore_mode(); this._flags.if_block = !1, this._flags.else_block = !1 } if (this._flags.in_case_statement && u(e, ["case", "default"])) return this.print_newline(), this._flags.last_token.type !== x.END_BLOCK && (this._flags.case_body || this._options.jslint_happy) && this.deindent(), this._flags.case_body = !1, this.print_token(e), void (this._flags.in_case = !0); if (this._flags.last_token.type !== x.COMMA && this._flags.last_token.type !== x.START_EXPR && this._flags.last_token.type !== x.EQUALS && this._flags.last_token.type !== x.OPERATOR || this.start_of_object_property() || this.allow_wrap_or_preserved_newline(e), o(e, "function")) return !n(this._flags.last_token.text, ["}", ";"]) && (!this._output.just_added_newline() || n(this._flags.last_token.text, ["(", "[", "{", ":", "=", ","]) || this._flags.last_token.type === x.OPERATOR) || this._output.just_added_blankline() || e.comments_before || (this.print_newline(), this.print_newline(!0)), this._flags.last_token.type === x.RESERVED || this._flags.last_token.type === x.WORD ? u(this._flags.last_token, ["get", "set", "new", "export"]) || u(this._flags.last_token, T) ? this._output.space_before_token = !0 : o(this._flags.last_token, "default") && "export" === this._last_last_text ? this._output.space_before_token = !0 : "declare" === this._flags.last_token.text ? this._output.space_before_token = !0 : this.print_newline() : this._flags.last_token.type === x.OPERATOR || "=" === this._flags.last_token.text ? this._output.space_before_token = !0 : !this._flags.multiline_frame && (r(this._flags.mode) || s(this._flags.mode)) || this.print_newline(), this.print_token(e), void (this._flags.last_word = e.text); var _ = "NONE"; if (this._flags.last_token.type === x.END_BLOCK ? this._previous_flags.inline_frame ? _ = "SPACE" : u(e, ["else", "catch", "finally", "from"]) ? "expand" === this._options.brace_style || "end-expand" === this._options.brace_style || "none" === this._options.brace_style && e.newlines ? _ = "NEWLINE" : (_ = "SPACE", this._output.space_before_token = !0) : _ = "NEWLINE" : this._flags.last_token.type === x.SEMICOLON && this._flags.mode === R.BlockStatement ? _ = "NEWLINE" : this._flags.last_token.type === x.SEMICOLON && r(this._flags.mode) ? _ = "SPACE" : this._flags.last_token.type === x.STRING ? _ = "NEWLINE" : this._flags.last_token.type === x.RESERVED || this._flags.last_token.type === x.WORD || "*" === this._flags.last_token.text && (n(this._last_last_text, ["function", "yield"]) || this._flags.mode === R.ObjectLiteral && n(this._last_last_text, ["{", ","])) ? _ = "SPACE" : this._flags.last_token.type === x.START_BLOCK ? this._flags.inline_frame ? _ = "SPACE" : _ = "NEWLINE" : this._flags.last_token.type === x.END_EXPR && (this._output.space_before_token = !0, _ = "NEWLINE"), u(e, h) && ")" !== this._flags.last_token.text && (this._flags.inline_frame || "else" === this._flags.last_token.text || "export" === this._flags.last_token.text ? _ = "SPACE" : _ = "NEWLINE"), !u(e, ["else", "catch", "finally"])) "NEWLINE" === _ ? u(this._flags.last_token, w) ? this._output.space_before_token = !0 : "declare" === this._flags.last_token.text && u(e, ["var", "let", "const"]) ? this._output.space_before_token = !0 : this._flags.last_token.type === x.END_EXPR ? u(e, h) && ")" !== this._flags.last_token.text && this.print_newline() : (this._flags.last_token.type !== x.START_EXPR || !u(e, ["var", "let", "const"])) && ":" !== this._flags.last_token.text && (o(e, "if") && o(e.previous, "else") ? this._output.space_before_token = !0 : this.print_newline()) : this._flags.multiline_frame && s(this._flags.mode) && "," === this._flags.last_token.text && "}" === this._last_last_text ? this.print_newline() : "SPACE" === _ && (this._output.space_before_token = !0); else if ((this._flags.last_token.type !== x.END_BLOCK || this._previous_flags.mode !== R.BlockStatement || "expand" === this._options.brace_style || "end-expand" === this._options.brace_style || "none" === this._options.brace_style && e.newlines) && !this._flags.inline_frame) this.print_newline(); else { this._output.trim(!0); var a = this._output.current_line; "}" !== a.last() && this.print_newline(), this._output.space_before_token = !0 } e.previous && (e.previous.type === x.WORD || e.previous.type === x.RESERVED) && (this._output.space_before_token = !0), this.print_token(e), this._flags.last_word = e.text, e.type === x.RESERVED && ("do" === e.text ? this._flags.do_block = !0 : "if" === e.text ? this._flags.if_block = !0 : "import" === e.text ? this._flags.import_block = !0 : this._flags.import_block && o(e, "from") && (this._flags.import_block = !1)) }, c.prototype.handle_semicolon = function (e) { this.start_of_statement(e) ? this._output.space_before_token = !1 : this.handle_whitespace_and_comments(e); for (var t = this._tokens.peek(); this._flags.mode === R.Statement && !(this._flags.if_block && o(t, "else")) && !this._flags.do_block;)this.restore_mode(); this._flags.import_block && (this._flags.import_block = !1), this.print_token(e) }, c.prototype.handle_string = function (e) { this.start_of_statement(e) ? this._output.space_before_token = !0 : (this.handle_whitespace_and_comments(e), this._flags.last_token.type === x.RESERVED || this._flags.last_token.type === x.WORD || this._flags.inline_frame ? this._output.space_before_token = !0 : this._flags.last_token.type === x.COMMA || this._flags.last_token.type === x.START_EXPR || this._flags.last_token.type === x.EQUALS || this._flags.last_token.type === x.OPERATOR ? !this.start_of_object_property() && this.allow_wrap_or_preserved_newline(e) : this.print_newline()), this.print_token(e) }, c.prototype.handle_equals = function (e) { this.start_of_statement(e) || this.handle_whitespace_and_comments(e), this._flags.declaration_statement && (this._flags.declaration_assignment = !0), this._output.space_before_token = !0, this.print_token(e), this._output.space_before_token = !0 }, c.prototype.handle_comma = function (e) { this.handle_whitespace_and_comments(e, !0), this.print_token(e), this._output.space_before_token = !0, this._flags.declaration_statement ? (r(this._flags.parent.mode) && (this._flags.declaration_assignment = !1), this._flags.declaration_assignment ? (this._flags.declaration_assignment = !1, this.print_newline(!1, !0)) : this._options.comma_first && this.allow_wrap_or_preserved_newline(e)) : this._flags.mode === R.ObjectLiteral || this._flags.mode === R.Statement && this._flags.parent.mode === R.ObjectLiteral ? (this._flags.mode === R.Statement && this.restore_mode(), !this._flags.inline_frame && this.print_newline()) : this._options.comma_first && this.allow_wrap_or_preserved_newline(e) }, c.prototype.handle_operator = function (e) { var t = "*" === e.text && (u(this._flags.last_token, ["function", "yield"]) || n(this._flags.last_token.type, [x.START_BLOCK, x.COMMA, x.END_BLOCK, x.SEMICOLON])), _ = n(e.text, ["-", "+"]) && (n(this._flags.last_token.type, [x.START_BLOCK, x.START_EXPR, x.EQUALS, x.OPERATOR]) || n(this._flags.last_token.text, h) || "," === this._flags.last_token.text); if (this.start_of_statement(e)); else { this.handle_whitespace_and_comments(e, !t) } if (u(this._flags.last_token, w)) return this._output.space_before_token = !0, void this.print_token(e); if ("*" === e.text && this._flags.last_token.type === x.DOT) return void this.print_token(e); if ("::" === e.text) return void this.print_token(e); if (this._flags.last_token.type === x.OPERATOR && n(this._options.operator_position, O) && this.allow_wrap_or_preserved_newline(e), ":" === e.text && this._flags.in_case) return this.print_token(e), this._flags.in_case = !1, this._flags.case_body = !0, void (this._tokens.peek().type === x.START_BLOCK ? this._output.space_before_token = !0 : (this.indent(), this.print_newline())); var a = !0, o = !0, i = !1; if (":" === e.text ? 0 === this._flags.ternary_depth ? a = !1 : (this._flags.ternary_depth -= 1, i = !0) : "?" === e.text && (this._flags.ternary_depth += 1), !_ && !t && this._options.preserve_newlines && n(e.text, y)) { var p = ":" === e.text, s = p && i, l = p && !i; switch (this._options.operator_position) { case E.before_newline: return this._output.space_before_token = !l, this.print_token(e), (!p || s) && this.allow_wrap_or_preserved_newline(e), void (this._output.space_before_token = !0); case E.after_newline: return this._output.space_before_token = !0, !p || s ? this._tokens.peek().newlines ? this.print_newline(!1, !0) : this.allow_wrap_or_preserved_newline(e) : this._output.space_before_token = !1, this.print_token(e), void (this._output.space_before_token = !0); case E.preserve_newline: return l || this.allow_wrap_or_preserved_newline(e), a = !(this._output.just_added_newline() || l), this._output.space_before_token = a, this.print_token(e), void (this._output.space_before_token = !0); } } if (t) { this.allow_wrap_or_preserved_newline(e), a = !1; var d = this._tokens.peek(); o = d && n(d.type, [x.WORD, x.RESERVED]) } else "..." === e.text ? (this.allow_wrap_or_preserved_newline(e), a = this._flags.last_token.type === x.START_BLOCK, o = !1) : (n(e.text, ["--", "++", "!", "~"]) || _) && ((this._flags.last_token.type === x.COMMA || this._flags.last_token.type === x.START_EXPR) && this.allow_wrap_or_preserved_newline(e), a = !1, o = !1, e.newlines && ("--" === e.text || "++" === e.text) && this.print_newline(!1, !0), ";" === this._flags.last_token.text && r(this._flags.mode) && (a = !0), this._flags.last_token.type === x.RESERVED ? a = !0 : this._flags.last_token.type === x.END_EXPR ? a = "]" !== this._flags.last_token.text || "--" !== e.text && "++" !== e.text : this._flags.last_token.type === x.OPERATOR && (a = n(e.text, ["--", "-", "++", "+"]) && n(this._flags.last_token.text, ["--", "-", "++", "+"]), n(e.text, ["+", "-"]) && n(this._flags.last_token.text, ["--", "++"]) && (o = !0)), (this._flags.mode !== R.BlockStatement || this._flags.inline_frame) && this._flags.mode !== R.Statement || "{" !== this._flags.last_token.text && ";" !== this._flags.last_token.text || this.print_newline()); this._output.space_before_token = this._output.space_before_token || a, this.print_token(e), this._output.space_before_token = o }, c.prototype.handle_block_comment = function (e, t) { return this._output.raw ? (this._output.add_raw_token(e), void (e.directives && "end" === e.directives.preserve && (this._output.raw = this._options.test_output_raw))) : e.directives ? (this.print_newline(!1, t), this.print_token(e), "start" === e.directives.preserve && (this._output.raw = !0), void this.print_newline(!1, !0)) : b.newline.test(e.text) || e.newlines ? void this.print_block_commment(e, t) : (this._output.space_before_token = !0, this.print_token(e), void (this._output.space_before_token = !0)) }, c.prototype.print_block_commment = function (e, t) { var _, n = p(e.text), o = !1, u = !1, i = e.whitespace_before, s = i.length; if (this.print_newline(!1, t), this.print_token_line_indentation(e), this._output.add_token(n[0]), this.print_newline(!1, t), 1 < n.length) { for (n = n.slice(1), o = l(n, "*"), u = d(n, i), o && (this._flags.alignment = 1), _ = 0; _ < n.length; _++)o ? (this.print_token_line_indentation(e), this._output.add_token(a(n[_]))) : u && n[_] ? (this.print_token_line_indentation(e), this._output.add_token(n[_].substring(s))) : (this._output.current_line.set_indent(-1), this._output.add_token(n[_])), this.print_newline(!1, t); this._flags.alignment = 0 } }, c.prototype.handle_comment = function (e, t) { e.newlines ? this.print_newline(!1, t) : this._output.trim(!0), this._output.space_before_token = !0, this.print_token(e), this.print_newline(!1, t) }, c.prototype.handle_dot = function (e) { this.start_of_statement(e) || this.handle_whitespace_and_comments(e, !0), u(this._flags.last_token, w) ? this._output.space_before_token = !1 : this.allow_wrap_or_preserved_newline(e, ")" === this._flags.last_token.text && this._options.break_chained_methods), this._options.unindent_chained_methods && this._output.just_added_newline() && this.deindent(), this.print_token(e) }, c.prototype.handle_unknown = function (e, t) { this.print_token(e), "\n" === e.text[e.text.length - 1] && this.print_newline(!1, t) }, c.prototype.handle_eof = function (e) { for (; this._flags.mode === R.Statement;)this.restore_mode(); this.handle_whitespace_and_comments(e) }, e.exports.Beautifier = c }, function (e) { "use strict"; function t(e) { this.__parent = e, this.__character_count = 0, this.__indent_count = -1, this.__alignment_count = 0, this.__wrap_point_index = 0, this.__wrap_point_character_count = 0, this.__wrap_point_indent_count = -1, this.__wrap_point_alignment_count = 0, this.__items = [] } function _(e, t) { this.__cache = [""], this.__indent_size = e.indent_size, this.__indent_string = e.indent_char, e.indent_with_tabs || (this.__indent_string = Array(e.indent_size + 1).join(e.indent_char)), t = t || "", 0 < e.indent_level && (t = Array(e.indent_level + 1).join(this.__indent_string)), this.__base_string = t, this.__base_string_length = t.length } function n(e, n) { this.__indent_cache = new _(e, n), this.raw = !1, this._end_with_newline = e.end_with_newline, this.indent_size = e.indent_size, this.wrap_line_length = e.wrap_line_length, this.indent_empty_lines = e.indent_empty_lines, this.__lines = [], this.previous_line = null, this.current_line = null, this.next_line = new t(this), this.space_before_token = !1, this.non_breaking_space = !1, this.previous_token_wrapped = !1, this.__add_outputline() } t.prototype.clone_empty = function () { var e = new t(this.__parent); return e.set_indent(this.__indent_count, this.__alignment_count), e }, t.prototype.item = function (e) { return 0 > e ? this.__items[this.__items.length + e] : this.__items[e] }, t.prototype.has_match = function (e) { for (var t = this.__items.length - 1; 0 <= t; t--)if (this.__items[t].match(e)) return !0; return !1 }, t.prototype.set_indent = function (e, t) { this.is_empty() && (this.__indent_count = e || 0, this.__alignment_count = t || 0, this.__character_count = this.__parent.get_indent_size(this.__indent_count, this.__alignment_count)) }, t.prototype._set_wrap_point = function () { this.__parent.wrap_line_length && (this.__wrap_point_index = this.__items.length, this.__wrap_point_character_count = this.__character_count, this.__wrap_point_indent_count = this.__parent.next_line.__indent_count, this.__wrap_point_alignment_count = this.__parent.next_line.__alignment_count) }, t.prototype._should_wrap = function () { return this.__wrap_point_index && this.__character_count > this.__parent.wrap_line_length && this.__wrap_point_character_count > this.__parent.next_line.__character_count }, t.prototype._allow_wrap = function () { if (this._should_wrap()) { this.__parent.add_new_line(); var e = this.__parent.current_line; return e.set_indent(this.__wrap_point_indent_count, this.__wrap_point_alignment_count), e.__items = this.__items.slice(this.__wrap_point_index), this.__items = this.__items.slice(0, this.__wrap_point_index), e.__character_count += this.__character_count - this.__wrap_point_character_count, this.__character_count = this.__wrap_point_character_count, " " === e.__items[0] && (e.__items.splice(0, 1), e.__character_count -= 1), !0 } return !1 }, t.prototype.is_empty = function () { return 0 === this.__items.length }, t.prototype.last = function () { return this.is_empty() ? null : this.__items[this.__items.length - 1] }, t.prototype.push = function (e) { this.__items.push(e); var t = e.lastIndexOf("\n"); -1 === t ? this.__character_count += e.length : this.__character_count = e.length - t }, t.prototype.pop = function () { var e = null; return this.is_empty() || (e = this.__items.pop(), this.__character_count -= e.length), e }, t.prototype._remove_indent = function () { 0 < this.__indent_count && (this.__indent_count -= 1, this.__character_count -= this.__parent.indent_size) }, t.prototype._remove_wrap_indent = function () { 0 < this.__wrap_point_indent_count && (this.__wrap_point_indent_count -= 1) }, t.prototype.trim = function () { for (; " " === this.last();)this.__items.pop(), this.__character_count -= 1 }, t.prototype.toString = function () { var e = ""; return this.is_empty() ? this.__parent.indent_empty_lines && (e = this.__parent.get_indent_string(this.__indent_count)) : (e = this.__parent.get_indent_string(this.__indent_count, this.__alignment_count), e += this.__items.join("")), e }, _.prototype.get_indent_size = function (e, t) { var _ = this.__base_string_length; return t = t || 0, 0 > e && (_ = 0), _ += e * this.__indent_size, _ += t, _ }, _.prototype.get_indent_string = function (e, t) { var _ = this.__base_string; return t = t || 0, 0 > e && (e = 0, _ = ""), t += e * this.__indent_size, this.__ensure_cache(t), _ += this.__cache[t], _ }, _.prototype.__ensure_cache = function (e) { for (; e >= this.__cache.length;)this.__add_column() }, _.prototype.__add_column = function () { var e = this.__cache.length, t = 0, _ = ""; this.__indent_size && e >= this.__indent_size && (t = Math.floor(e / this.__indent_size), e -= t * this.__indent_size, _ = Array(t + 1).join(this.__indent_string)), e && (_ += Array(e + 1).join(" ")), this.__cache.push(_) }, n.prototype.__add_outputline = function () { this.previous_line = this.current_line, this.current_line = this.next_line.clone_empty(), this.__lines.push(this.current_line) }, n.prototype.get_line_number = function () { return this.__lines.length }, n.prototype.get_indent_string = function (e, t) { return this.__indent_cache.get_indent_string(e, t) }, n.prototype.get_indent_size = function (e, t) { return this.__indent_cache.get_indent_size(e, t) }, n.prototype.is_empty = function () { return !this.previous_line && this.current_line.is_empty() }, n.prototype.add_new_line = function (e) { return !(this.is_empty() || !e && this.just_added_newline()) && (this.raw || this.__add_outputline(), !0) }, n.prototype.get_code = function (e) { this.trim(!0); var t = this.current_line.pop(); t && ("\n" === t[t.length - 1] && (t = t.replace(/\n+$/g, "")), this.current_line.push(t)), this._end_with_newline && this.__add_outputline(); var _ = this.__lines.join("\n"); return "\n" !== e && (_ = _.replace(/[\n]/g, e)), _ }, n.prototype.set_wrap_point = function () { this.current_line._set_wrap_point() }, n.prototype.set_indent = function (e, t) { return (e = e || 0, t = t || 0, this.next_line.set_indent(e, t), 1 < this.__lines.length) ? (this.current_line.set_indent(e, t), !0) : (this.current_line.set_indent(), !1) }, n.prototype.add_raw_token = function (e) { for (var t = 0; t < e.newlines; t++)this.__add_outputline(); this.current_line.set_indent(-1), this.current_line.push(e.whitespace_before), this.current_line.push(e.text), this.space_before_token = !1, this.non_breaking_space = !1, this.previous_token_wrapped = !1 }, n.prototype.add_token = function (e) { this.__add_space_before_token(), this.current_line.push(e), this.space_before_token = !1, this.non_breaking_space = !1, this.previous_token_wrapped = this.current_line._allow_wrap() }, n.prototype.__add_space_before_token = function () { this.space_before_token && !this.just_added_newline() && (!this.non_breaking_space && this.set_wrap_point(), this.current_line.push(" ")) }, n.prototype.remove_indent = function (e) { for (var t = this.__lines.length; e < t;)this.__lines[e]._remove_indent(), e++; this.current_line._remove_wrap_indent() }, n.prototype.trim = function (e) { for (e = void 0 !== e && e, this.current_line.trim(); e && 1 < this.__lines.length && this.current_line.is_empty();)this.__lines.pop(), this.current_line = this.__lines[this.__lines.length - 1], this.current_line.trim(); this.previous_line = 1 < this.__lines.length ? this.__lines[this.__lines.length - 2] : null }, n.prototype.just_added_newline = function () { return this.current_line.is_empty() }, n.prototype.just_added_blankline = function () { return this.is_empty() || this.current_line.is_empty() && this.previous_line.is_empty() }, n.prototype.ensure_empty_line_above = function (e, _) { for (var n = this.__lines.length - 2; 0 <= n;) { var a = this.__lines[n]; if (a.is_empty()) break; else if (0 !== a.item(0).indexOf(e) && a.item(-1) !== _) { this.__lines.splice(n + 1, 0, new t(this)), this.previous_line = this.__lines[this.__lines.length - 2]; break } n-- } }, e.exports.Output = n }, function (e) { "use strict"; e.exports.Token = function (e, t, _, n) { this.type = e, this.text = t, this.comments_before = null, this.newlines = _ || 0, this.whitespace_before = n || "", this.parent = null, this.next = null, this.previous = null, this.opened = null, this.closed = null, this.directives = null } }, function (e, t) { "use strict"; var _ = "\\x24\\x30-\\x39\\x41-\\x5a\\x5f\\x61-\\x7a", n = "\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc", a = "\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f", o = "(?:\\\\u[0-9a-fA-F]{4}|[\\x23\\x24\\x40\\x41-\\x5a\\x5f\\x61-\\x7a" + n + "])"; t.identifier = new RegExp(o + ("(?:\\\\u[0-9a-fA-F]{4}|[" + _ + n + a + "])*"), "g"), t.identifierStart = new RegExp(o), t.identifierMatch = new RegExp("(?:\\\\u[0-9a-fA-F]{4}|[" + _ + n + a + "])+"); t.newline = /[\n\r\u2028\u2029]/, t.lineBreak = new RegExp("\r\n|" + t.newline.source), t.allLineBreaks = new RegExp(t.lineBreak.source, "g") }, function (e, t, _) { "use strict"; function n(e) { a.call(this, e, "js"); var t = this.raw_options.brace_style || null; "expand-strict" === t ? this.raw_options.brace_style = "expand" : "collapse-preserve-inline" === t ? this.raw_options.brace_style = "collapse,preserve-inline" : this.raw_options.braces_on_own_line !== void 0 && (this.raw_options.brace_style = this.raw_options.braces_on_own_line ? "expand" : "collapse"); var _ = this._get_selection_list("brace_style", ["collapse", "expand", "end-expand", "none", "preserve-inline"]); this.brace_preserve_inline = !1, this.brace_style = "collapse"; for (var n = 0; n < _.length; n++)"preserve-inline" === _[n] ? this.brace_preserve_inline = !0 : this.brace_style = _[n]; this.unindent_chained_methods = this._get_boolean("unindent_chained_methods"), this.break_chained_methods = this._get_boolean("break_chained_methods"), this.space_in_paren = this._get_boolean("space_in_paren"), this.space_in_empty_paren = this._get_boolean("space_in_empty_paren"), this.jslint_happy = this._get_boolean("jslint_happy"), this.space_after_anon_function = this._get_boolean("space_after_anon_function"), this.space_after_named_function = this._get_boolean("space_after_named_function"), this.keep_array_indentation = this._get_boolean("keep_array_indentation"), this.space_before_conditional = this._get_boolean("space_before_conditional", !0), this.unescape_strings = this._get_boolean("unescape_strings"), this.e4x = this._get_boolean("e4x"), this.comma_first = this._get_boolean("comma_first"), this.operator_position = this._get_selection("operator_position", o), this.test_output_raw = this._get_boolean("test_output_raw"), this.jslint_happy && (this.space_after_anon_function = !0) } var a = _(6).Options, o = ["before-newline", "after-newline", "preserve-newline"]; n.prototype = new a, e.exports.Options = n }, function (e) { "use strict"; function t(e, t) { this.raw_options = _(e, t), this.disabled = this._get_boolean("disabled"), this.eol = this._get_characters("eol", "auto"), this.end_with_newline = this._get_boolean("end_with_newline"), this.indent_size = this._get_number("indent_size", 4), this.indent_char = this._get_characters("indent_char", " "), this.indent_level = this._get_number("indent_level"), this.preserve_newlines = this._get_boolean("preserve_newlines", !0), this.max_preserve_newlines = this._get_number("max_preserve_newlines", 32786), this.preserve_newlines || (this.max_preserve_newlines = 0), this.indent_with_tabs = this._get_boolean("indent_with_tabs", "\t" === this.indent_char), this.indent_with_tabs && (this.indent_char = "\t", 1 === this.indent_size && (this.indent_size = 4)), this.wrap_line_length = this._get_number("wrap_line_length", this._get_number("max_char")), this.indent_empty_lines = this._get_boolean("indent_empty_lines"), this.templating = this._get_selection_list("templating", ["auto", "none", "django", "erb", "handlebars", "php"], ["auto"]) } function _(e, t) { var _ = {}; e = n(e); for (var a in e) a !== t && (_[a] = e[a]); if (t && e[t]) for (a in e[t]) _[a] = e[t][a]; return _ } function n(e) { var t, _ = {}; for (t in e) { var n = t.replace(/-/g, "_"); _[n] = e[t] } return _ } t.prototype._get_array = function (e, t) { var _ = this.raw_options[e], n = t || []; return "object" == typeof _ ? null !== _ && "function" == typeof _.concat && (n = _.concat()) : "string" == typeof _ && (n = _.split(/[^a-zA-Z0-9_\/\-]+/)), n }, t.prototype._get_boolean = function (e, t) { var _ = this.raw_options[e], n = _ === void 0 ? !!t : !!_; return n }, t.prototype._get_characters = function (e, t) { var _ = this.raw_options[e], n = t || ""; return "string" == typeof _ && (n = _.replace(/\\r/, "\r").replace(/\\n/, "\n").replace(/\\t/, "\t")), n }, t.prototype._get_number = function (e, t) { var _ = this.raw_options[e]; t = parseInt(t, 10), isNaN(t) && (t = 0); var n = parseInt(_, 10); return isNaN(n) && (n = t), n }, t.prototype._get_selection = function (e, t, _) { var n = this._get_selection_list(e, t, _); if (1 !== n.length) throw new Error("Invalid Option Value: The option '" + e + "' can only be one of the following values:\n" + t + "\nYou passed in: '" + this.raw_options[e] + "'"); return n[0] }, t.prototype._get_selection_list = function (e, t, _) { if (!t || 0 === t.length) throw new Error("Selection list cannot be empty."); if (_ = _ || [t[0]], !this._is_valid_selection(_, t)) throw new Error("Invalid Default Value!"); var n = this._get_array(e, _); if (!this._is_valid_selection(n, t)) throw new Error("Invalid Option Value: The option '" + e + "' can contain only the following values:\n" + t + "\nYou passed in: '" + this.raw_options[e] + "'"); return n }, t.prototype._is_valid_selection = function (e, t) { return e.length && t.length && !e.some(function (e) { return -1 === t.indexOf(e) }) }, e.exports.Options = t, e.exports.normalizeOpts = n, e.exports.mergeOpts = _ }, function (e, t, _) { "use strict"; function n(e, t) { return -1 !== t.indexOf(e) } function a(e) { for (var t = "", _ = 0, n = new o(e), a = null; n.hasNext();)if (a = n.match(/([\s]|[^\\]|\\\\)+/g), a && (t += a[0]), "\\" === n.peek()) { if (n.next(), "x" === n.peek()) a = n.match(/x([0-9A-Fa-f]{2})/g); else if ("u" === n.peek()) a = n.match(/u([0-9A-Fa-f]{4})/g); else { t += "\\", n.hasNext() && (t += n.next()); continue } if (!a) return e; if (_ = parseInt(a[1], 16), 126 < _ && 255 >= _ && 0 === a[0].indexOf("x")) return e; if (0 <= _ && 32 > _) { t += "\\" + a[0]; continue } else t += 34 === _ || 39 === _ || 92 === _ ? "\\" + String.fromCharCode(_) : String.fromCharCode(_) } return t } var o = _(8).InputScanner, u = _(9).Tokenizer, i = _(9).TOKEN, p = _(13).Directives, s = _(4), r = _(12).Pattern, l = _(14).TemplatablePattern, d = { START_EXPR: "TK_START_EXPR", END_EXPR: "TK_END_EXPR", START_BLOCK: "TK_START_BLOCK", END_BLOCK: "TK_END_BLOCK", WORD: "TK_WORD", RESERVED: "TK_RESERVED", SEMICOLON: "TK_SEMICOLON", STRING: "TK_STRING", EQUALS: "TK_EQUALS", OPERATOR: "TK_OPERATOR", COMMA: "TK_COMMA", BLOCK_COMMENT: "TK_BLOCK_COMMENT", COMMENT: "TK_COMMENT", DOT: "TK_DOT", UNKNOWN: "TK_UNKNOWN", START: i.START, RAW: i.RAW, EOF: i.EOF }, c = new p(/\/\*/, /\*\//), f = ">>> === !== << && >= ** != == <= >> || < / - + > : & % ? ^ | *".split(" "), g = ">>>= ... >>= <<= === >>> !== **= => ^= :: /= << <= == && -= >= >> != -- += ** || ++ %= &= *= |= = ! ? > < : / ^ - + * & % ~ |"; g = g.replace(/[-[\]{}()*+?.,\\^$|#]/g, "\\$&"), g = g.replace(/ /g, "|"); var b, m = new RegExp(g), k = ["continue", "try", "throw", "return", "var", "let", "const", "if", "switch", "case", "default", "for", "while", "break", "function", "import", "export"], h = k.concat(["do", "in", "of", "else", "get", "set", "new", "catch", "finally", "typeof", "yield", "async", "await", "from", "as"]), y = new RegExp("^(?:" + h.join("|") + ")$"), x = function (e, t) { u.call(this, e, t), this._patterns.whitespace = this._patterns.whitespace.matching(/\u00A0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff/.source, /\u2028\u2029/.source); var _ = new r(this._input), n = new l(this._input).read_options(this._options); this.__patterns = { template: n, identifier: n.starting_with(s.identifier).matching(s.identifierMatch), number: _.matching(/0[xX][0123456789abcdefABCDEF]*|0[oO][01234567]*|0[bB][01]*|\d+n|(?:\.\d+|\d+\.?\d*)(?:[eE][+-]?\d+)?/), punct: _.matching(m), comment: _.starting_with(/\/\//).until(/[\n\r\u2028\u2029]/), block_comment: _.starting_with(/\/\*/).until_after(/\*\//), html_comment_start: _.matching(/<!--/), html_comment_end: _.matching(/-->/), include: _.starting_with(/#include/).until_after(s.lineBreak), shebang: _.starting_with(/#!/).until_after(s.lineBreak), xml: _.matching(/[\s\S]*?<(\/?)([-a-zA-Z:0-9_.]+|{[\s\S]+?}|!\[CDATA\[[\s\S]*?\]\])(\s+{[\s\S]+?}|\s+[-a-zA-Z:0-9_.]+|\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{[\s\S]+?}))*\s*(\/?)\s*>/), single_quote: n.until(/['\\\n\r\u2028\u2029]/), double_quote: n.until(/["\\\n\r\u2028\u2029]/), template_text: n.until(/[`\\$]/), template_expression: n.until(/[`}\\]/) } }; x.prototype = new u, x.prototype._is_comment = function (e) { return e.type === d.COMMENT || e.type === d.BLOCK_COMMENT || e.type === d.UNKNOWN }, x.prototype._is_opening = function (e) { return e.type === d.START_BLOCK || e.type === d.START_EXPR }, x.prototype._is_closing = function (e, t) { return (e.type === d.END_BLOCK || e.type === d.END_EXPR) && t && ("]" === e.text && "[" === t.text || ")" === e.text && "(" === t.text || "}" === e.text && "{" === t.text) }, x.prototype._reset = function () { b = !1 }, x.prototype._get_next_token = function (e) { var t = null; this._readWhitespace(); var _ = this._input.peek(); return null === _ ? this._create_token(d.EOF, "") : (t = t || this._read_non_javascript(_), t = t || this._read_string(_), t = t || this._read_word(e), t = t || this._read_singles(_), t = t || this._read_comment(_), t = t || this._read_regexp(_, e), t = t || this._read_xml(_, e), t = t || this._read_punctuation(), t = t || this._create_token(d.UNKNOWN, this._input.next()), t) }, x.prototype._read_word = function (e) { var t; return (t = this.__patterns.identifier.read(), "" !== t) ? (t = t.replace(s.allLineBreaks, "\n"), e.type !== d.DOT && (e.type !== d.RESERVED || "set" !== e.text && "get" !== e.text) && y.test(t) ? "in" === t || "of" === t ? this._create_token(d.OPERATOR, t) : this._create_token(d.RESERVED, t) : this._create_token(d.WORD, t)) : (t = this.__patterns.number.read(), "" !== t) ? this._create_token(d.WORD, t) : void 0 }, x.prototype._read_singles = function (e) { var t = null; return "(" === e || "[" === e ? t = this._create_token(d.START_EXPR, e) : ")" === e || "]" === e ? t = this._create_token(d.END_EXPR, e) : "{" === e ? t = this._create_token(d.START_BLOCK, e) : "}" === e ? t = this._create_token(d.END_BLOCK, e) : ";" === e ? t = this._create_token(d.SEMICOLON, e) : "." === e && /[^\d\.]/.test(this._input.peek(1)) ? t = this._create_token(d.DOT, e) : "," == e && (t = this._create_token(d.COMMA, e)), t && this._input.next(), t }, x.prototype._read_punctuation = function () { var e = this.__patterns.punct.read(); if ("" !== e) return "=" === e ? this._create_token(d.EQUALS, e) : this._create_token(d.OPERATOR, e) }, x.prototype._read_non_javascript = function (e) { var t = ""; if ("#" === e) { if (this._is_first_token() && (t = this.__patterns.shebang.read(), t)) return this._create_token(d.UNKNOWN, t.trim() + "\n"); if (t = this.__patterns.include.read(), t) return this._create_token(d.UNKNOWN, t.trim() + "\n"); e = this._input.next(); var _ = "#"; if (this._input.hasNext() && this._input.testChar(/[0-9]/)) { do e = this._input.next(), _ += e; while (this._input.hasNext() && "#" !== e && "=" !== e); return "#" === e || ("[" === this._input.peek() && "]" === this._input.peek(1) ? (_ += "[]", this._input.next(), this._input.next()) : "{" === this._input.peek() && "}" === this._input.peek(1) && (_ += "{}", this._input.next(), this._input.next())), this._create_token(d.WORD, _) } this._input.back() } else if ("<" === e && this._is_first_token()) { if (t = this.__patterns.html_comment_start.read(), t) { for (; this._input.hasNext() && !this._input.testChar(s.newline);)t += this._input.next(); return b = !0, this._create_token(d.COMMENT, t) } } else if (b && "-" === e && (t = this.__patterns.html_comment_end.read(), t)) return b = !1, this._create_token(d.COMMENT, t); return null }, x.prototype._read_comment = function (e) { var t = null; if ("/" === e) { var _ = ""; if ("*" === this._input.peek(1)) { _ = this.__patterns.block_comment.read(); var n = c.get_directives(_); n && "start" === n.ignore && (_ += c.readIgnored(this._input)), _ = _.replace(s.allLineBreaks, "\n"), t = this._create_token(d.BLOCK_COMMENT, _), t.directives = n } else "/" === this._input.peek(1) && (_ = this.__patterns.comment.read(), t = this._create_token(d.COMMENT, _)) } return t }, x.prototype._read_string = function (e) { if ("`" === e || "'" === e || "\"" === e) { var t = this._input.next(); return this.has_char_escapes = !1, t += "`" === e ? this._read_string_recursive("`", !0, "${") : this._read_string_recursive(e), this.has_char_escapes && this._options.unescape_strings && (t = a(t)), this._input.peek() === e && (t += this._input.next()), t = t.replace(s.allLineBreaks, "\n"), this._create_token(d.STRING, t) } return null }, x.prototype._allow_regexp_or_xml = function (e) { return e.type === d.RESERVED && n(e.text, ["return", "case", "throw", "else", "do", "typeof", "yield"]) || e.type === d.END_EXPR && ")" === e.text && e.opened.previous.type === d.RESERVED && n(e.opened.previous.text, ["if", "while", "for"]) || n(e.type, [d.COMMENT, d.START_EXPR, d.START_BLOCK, d.START, d.END_BLOCK, d.OPERATOR, d.EQUALS, d.EOF, d.SEMICOLON, d.COMMA]) }, x.prototype._read_regexp = function (e, t) { if ("/" === e && this._allow_regexp_or_xml(t)) { for (var _ = this._input.next(), n = !1, a = !1; this._input.hasNext() && (n || a || this._input.peek() !== e) && !this._input.testChar(s.newline);)_ += this._input.peek(), n ? n = !1 : (n = "\\" === this._input.peek(), "[" === this._input.peek() ? a = !0 : "]" === this._input.peek() && (a = !1)), this._input.next(); return this._input.peek() === e && (_ += this._input.next(), _ += this._input.read(s.identifier)), this._create_token(d.STRING, _) } return null }, x.prototype._read_xml = function (e, t) { if (this._options.e4x && "<" === e && this._allow_regexp_or_xml(t)) { var _ = "", n = this.__patterns.xml.read_match(); if (n) { for (var a = n[2].replace(/^{\s+/, "{").replace(/\s+}$/, "}"), o = 0 === a.indexOf("{"), u = 0; n;) { var i = !!n[1], p = n[2], r = !!n[n.length - 1] || "![CDATA[" === p.slice(0, 8); if (!r && (p === a || o && p.replace(/^{\s+/, "{").replace(/\s+}$/, "}")) && (i ? --u : ++u), _ += n[0], 0 >= u) break; n = this.__patterns.xml.read_match() } return n || (_ += this._input.match(/[\s\S]*/g)[0]), _ = _.replace(s.allLineBreaks, "\n"), this._create_token(d.STRING, _) } } return null }, x.prototype._read_string_recursive = function (e, t, _) { var n, a; "'" === e ? a = this.__patterns.single_quote : "\"" === e ? a = this.__patterns.double_quote : "`" === e ? a = this.__patterns.template_text : "}" == e && (a = this.__patterns.template_expression); for (var o = a.read(), u = ""; this._input.hasNext();) { if (u = this._input.next(), u === e || !t && s.newline.test(u)) { this._input.back(); break } else "\\" === u && this._input.hasNext() ? (n = this._input.peek(), "x" === n || "u" === n ? this.has_char_escapes = !0 : "\r" === n && "\n" === this._input.peek(1) && this._input.next(), u += this._input.next()) : _ && ("${" === _ && "$" === u && "{" === this._input.peek() && (u += this._input.next()), _ === u && (u += "`" === e ? this._read_string_recursive("}", t, "`") : this._read_string_recursive("`", t, "${"), this._input.hasNext() && (u += this._input.next()))); u += a.read(), o += u } return o }, e.exports.Tokenizer = x, e.exports.TOKEN = d, e.exports.positionable_operators = f.slice(), e.exports.line_starters = k.slice() }, function (e) { "use strict"; function t(e) { this.__input = e || "", this.__input_length = this.__input.length, this.__position = 0 } var _ = RegExp.prototype.hasOwnProperty("sticky"); t.prototype.restart = function () { this.__position = 0 }, t.prototype.back = function () { 0 < this.__position && (this.__position -= 1) }, t.prototype.hasNext = function () { return this.__position < this.__input_length }, t.prototype.next = function () { var e = null; return this.hasNext() && (e = this.__input.charAt(this.__position), this.__position += 1), e }, t.prototype.peek = function (e) { var t = null; return e = e || 0, e += this.__position, 0 <= e && e < this.__input_length && (t = this.__input.charAt(e)), t }, t.prototype.__match = function (e, t) { e.lastIndex = t; var n = e.exec(this.__input); return n && !(_ && e.sticky) && n.index !== t && (n = null), n }, t.prototype.test = function (e, t) { return t = t || 0, t += this.__position, !!(0 <= t && t < this.__input_length) && !!this.__match(e, t) }, t.prototype.testChar = function (e, t) { var _ = this.peek(t); return e.lastIndex = 0, null !== _ && e.test(_) }, t.prototype.match = function (e) { var t = this.__match(e, this.__position); return t ? this.__position += t[0].length : t = null, t }, t.prototype.read = function (e, t, _) { var n, a = ""; return e && (n = this.match(e), n && (a += n[0])), t && (n || !e) && (a += this.readUntil(t, _)), a }, t.prototype.readUntil = function (e, t) { var _ = "", n = this.__position; e.lastIndex = this.__position; var a = e.exec(this.__input); return a ? (n = a.index, t && (n += a[0].length)) : n = this.__input_length, _ = this.__input.substring(this.__position, n), this.__position = n, _ }, t.prototype.readUntilAfter = function (e) { return this.readUntil(e, !0) }, t.prototype.get_regexp = function (e, t) { var n = null, a = "g"; return t && _ && (a = "y"), "string" == typeof e && "" !== e ? n = new RegExp(e, a) : e && (n = new RegExp(e.source, a)), n }, t.prototype.get_literal_regexp = function (e) { return RegExp(e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")) }, t.prototype.peekUntilAfter = function (e) { var t = this.__position, _ = this.readUntilAfter(e); return this.__position = t, _ }, t.prototype.lookBack = function (e) { var t = this.__position - 1; return t >= e.length && this.__input.substring(t - e.length, t).toLowerCase() === e }, e.exports.InputScanner = t }, function (e, t, _) { "use strict"; var n = _(8).InputScanner, a = _(3).Token, o = _(10).TokenStream, u = _(11).WhitespacePattern, i = { START: "TK_START", RAW: "TK_RAW", EOF: "TK_EOF" }, p = function (e, t) { this._input = new n(e), this._options = t || {}, this.__tokens = null, this._patterns = {}, this._patterns.whitespace = new u(this._input) }; p.prototype.tokenize = function () { this._input.restart(), this.__tokens = new o, this._reset(); for (var e, t = new a(i.START, ""), _ = null, n = [], u = new o; t.type !== i.EOF;) { for (e = this._get_next_token(t, _); this._is_comment(e);)u.add(e), e = this._get_next_token(t, _); u.isEmpty() || (e.comments_before = u, u = new o), e.parent = _, this._is_opening(e) ? (n.push(_), _ = e) : _ && this._is_closing(e, _) && (e.opened = _, _.closed = e, _ = n.pop(), e.parent = _), e.previous = t, t.next = e, this.__tokens.add(e), t = e } return this.__tokens }, p.prototype._is_first_token = function () { return this.__tokens.isEmpty() }, p.prototype._reset = function () { }, p.prototype._get_next_token = function () { this._readWhitespace(); var e = this._input.read(/.+/g); return e ? this._create_token(i.RAW, e) : this._create_token(i.EOF, "") }, p.prototype._is_comment = function () { return !1 }, p.prototype._is_opening = function () { return !1 }, p.prototype._is_closing = function () { return !1 }, p.prototype._create_token = function (e, t) { var _ = new a(e, t, this._patterns.whitespace.newline_count, this._patterns.whitespace.whitespace_before_token); return _ }, p.prototype._readWhitespace = function () { return this._patterns.whitespace.read() }, e.exports.Tokenizer = p, e.exports.TOKEN = i }, function (e) { "use strict"; function t(e) { this.__tokens = [], this.__tokens_length = this.__tokens.length, this.__position = 0, this.__parent_token = e } t.prototype.restart = function () { this.__position = 0 }, t.prototype.isEmpty = function () { return 0 === this.__tokens_length }, t.prototype.hasNext = function () { return this.__position < this.__tokens_length }, t.prototype.next = function () { var e = null; return this.hasNext() && (e = this.__tokens[this.__position], this.__position += 1), e }, t.prototype.peek = function (e) { var t = null; return e = e || 0, e += this.__position, 0 <= e && e < this.__tokens_length && (t = this.__tokens[e]), t }, t.prototype.add = function (e) { this.__parent_token && (e.parent = this.__parent_token), this.__tokens.push(e), this.__tokens_length += 1 }, e.exports.TokenStream = t }, function (e, t, _) { "use strict"; function n(e, t) { a.call(this, e, t), t ? this._line_regexp = this._input.get_regexp(t._line_regexp) : this.__set_whitespace_patterns("", ""), this.newline_count = 0, this.whitespace_before_token = "" } var a = _(12).Pattern; n.prototype = new a, n.prototype.__set_whitespace_patterns = function (e, t) { e += "\\t ", t += "\\n\\r", this._match_pattern = this._input.get_regexp("[" + e + t + "]+", !0), this._newline_regexp = this._input.get_regexp("\\r\\n|[" + t + "]") }, n.prototype.read = function () { this.newline_count = 0, this.whitespace_before_token = ""; var e = this._input.read(this._match_pattern); if (" " === e) this.whitespace_before_token = " "; else if (e) { var t = this.__split(this._newline_regexp, e); this.newline_count = t.length - 1, this.whitespace_before_token = t[this.newline_count] } return e }, n.prototype.matching = function (e, t) { var _ = this._create(); return _.__set_whitespace_patterns(e, t), _._update(), _ }, n.prototype._create = function () { return new n(this._input, this) }, n.prototype.__split = function (e, t) { e.lastIndex = 0; for (var _ = 0, n = [], a = e.exec(t); a;)n.push(t.substring(_, a.index)), _ = a.index + a[0].length, a = e.exec(t); return _ < t.length ? n.push(t.substring(_, t.length)) : n.push(""), n }, e.exports.WhitespacePattern = n }, function (e) { "use strict"; function t(e, t) { this._input = e, this._starting_pattern = null, this._match_pattern = null, this._until_pattern = null, this._until_after = !1, t && (this._starting_pattern = this._input.get_regexp(t._starting_pattern, !0), this._match_pattern = this._input.get_regexp(t._match_pattern, !0), this._until_pattern = this._input.get_regexp(t._until_pattern), this._until_after = t._until_after) } t.prototype.read = function () { var e = this._input.read(this._starting_pattern); return (!this._starting_pattern || e) && (e += this._input.read(this._match_pattern, this._until_pattern, this._until_after)), e }, t.prototype.read_match = function () { return this._input.match(this._match_pattern) }, t.prototype.until_after = function (e) { var t = this._create(); return t._until_after = !0, t._until_pattern = this._input.get_regexp(e), t._update(), t }, t.prototype.until = function (e) { var t = this._create(); return t._until_after = !1, t._until_pattern = this._input.get_regexp(e), t._update(), t }, t.prototype.starting_with = function (e) { var t = this._create(); return t._starting_pattern = this._input.get_regexp(e, !0), t._update(), t }, t.prototype.matching = function (e) { var t = this._create(); return t._match_pattern = this._input.get_regexp(e, !0), t._update(), t }, t.prototype._create = function () { return new t(this._input, this) }, t.prototype._update = function () { }, e.exports.Pattern = t }, function (e) { "use strict"; function t(e, t) { e = "string" == typeof e ? e : e.source, t = "string" == typeof t ? t : t.source, this.__directives_block_pattern = new RegExp(e + / beautify( \w+[:]\w+)+ /.source + t, "g"), this.__directive_pattern = / (\w+)[:](\w+)/g, this.__directives_end_ignore_pattern = new RegExp(e + /\sbeautify\signore:end\s/.source + t, "g") } t.prototype.get_directives = function (e) { if (!e.match(this.__directives_block_pattern)) return null; var t = {}; this.__directive_pattern.lastIndex = 0; for (var _ = this.__directive_pattern.exec(e); _;)t[_[1]] = _[2], _ = this.__directive_pattern.exec(e); return t }, t.prototype.readIgnored = function (e) { return e.readUntilAfter(this.__directives_end_ignore_pattern) }, e.exports.Directives = t }, function (e, t, _) { "use strict"; function n(e, t) { a.call(this, e, t), this.__template_pattern = null, this._disabled = Object.assign({}, o), this._excluded = Object.assign({}, o), t && (this.__template_pattern = this._input.get_regexp(t.__template_pattern), this._excluded = Object.assign(this._excluded, t._excluded), this._disabled = Object.assign(this._disabled, t._disabled)); var _ = new a(e); this.__patterns = { handlebars_comment: _.starting_with(/{{!--/).until_after(/--}}/), handlebars_unescaped: _.starting_with(/{{{/).until_after(/}}}/), handlebars: _.starting_with(/{{/).until_after(/}}/), php: _.starting_with(/<\?(?:[=]|php)/).until_after(/\?>/), erb: _.starting_with(/<%[^%]/).until_after(/[^%]%>/), django: _.starting_with(/{%/).until_after(/%}/), django_value: _.starting_with(/{{/).until_after(/}}/), django_comment: _.starting_with(/{#/).until_after(/#}/) } } var a = _(12).Pattern, o = { django: !1, erb: !1, handlebars: !1, php: !1 }; n.prototype = new a, n.prototype._create = function () { return new n(this._input, this) }, n.prototype._update = function () { this.__set_templated_pattern() }, n.prototype.disable = function (e) { var t = this._create(); return t._disabled[e] = !0, t._update(), t }, n.prototype.read_options = function (e) { var t = this._create(); for (var _ in o) t._disabled[_] = -1 === e.templating.indexOf(_); return t._update(), t }, n.prototype.exclude = function (e) { var t = this._create(); return t._excluded[e] = !0, t._update(), t }, n.prototype.read = function () { var e = ""; e = this._match_pattern ? this._input.read(this._starting_pattern) : this._input.read(this._starting_pattern, this.__template_pattern); for (var t = this._read_template(); t;)t += this._match_pattern ? this._input.read(this._match_pattern) : this._input.readUntil(this.__template_pattern), e += t, t = this._read_template(); return this._until_after && (e += this._input.readUntilAfter(this._until_pattern)), e }, n.prototype.__set_templated_pattern = function () { var e = []; this._disabled.php || e.push(this.__patterns.php._starting_pattern.source), this._disabled.handlebars || e.push(this.__patterns.handlebars._starting_pattern.source), this._disabled.erb || e.push(this.__patterns.erb._starting_pattern.source), this._disabled.django || (e.push(this.__patterns.django._starting_pattern.source), e.push(this.__patterns.django_value._starting_pattern.source), e.push(this.__patterns.django_comment._starting_pattern.source)), this._until_pattern && e.push(this._until_pattern.source), this.__template_pattern = this._input.get_regexp("(?:" + e.join("|") + ")") }, n.prototype._read_template = function () { var e = "", t = this._input.peek(); if ("<" === t) { var _ = this._input.peek(1); this._disabled.php || this._excluded.php || "?" !== _ || (e = e || this.__patterns.php.read()), this._disabled.erb || this._excluded.erb || "%" !== _ || (e = e || this.__patterns.erb.read()) } else "{" === t && (this._disabled.handlebars || this._excluded.handlebars || (e = e || this.__patterns.handlebars_comment.read(), e = e || this.__patterns.handlebars_unescaped.read(), e = e || this.__patterns.handlebars.read()), this._disabled.django || (!this._excluded.django && !this._excluded.handlebars && (e = e || this.__patterns.django_value.read()), !this._excluded.django && (e = e || this.__patterns.django_comment.read(), e = e || this.__patterns.django.read()))); return e }, e.exports.TemplatablePattern = n }]), t = e; "function" == typeof define && define.amd ? define([], function () { return { js_beautify: t } }) : "undefined" == typeof exports ? "undefined" == typeof window ? "undefined" != typeof global && (global.js_beautify = t) : window.js_beautify = t : exports.js_beautify = t })();
